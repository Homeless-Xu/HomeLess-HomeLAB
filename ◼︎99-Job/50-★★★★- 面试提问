🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸 对我们公司的了解 🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸

p2p 在线借贷平台. 好像阿里巴巴有投资.
无锡拍拍贷是一家公司....
北京拍拍..

CEO 张俊 
CTO 顾少丰  技术主管. 
都是交通大学的.



🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸 你的缺点 🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸

🔸 实例
    1. 审美能力不行.
    千辛万苦写出来的主题. 人家都说很丑.
    后来收集了很多好看的博客.打算有空用到自己网站上...


🔸 分析
'' 这个面试题绝对是我见过最贱最难答的，
'' ‼️注意 这是一道送命题目‼️  一旦没有准备怕是要步步踩雷了。
'' 
'' ‼️坦诚的回答自己几个缺点，但要给出解决办法，一定要避开雷区.‼️
''		你去应聘设计师，说自己最大的缺点是缺乏创新精神
'' 	你去应聘销售，说自己最大的缺点是性格内向，不善言辞
'' 	程序员 说自己 缺乏逻辑性思维. 你是真傻....
'' 比如问你缺点 是为了得到某种信息 
'' 坦诚是不对的 避重就轻是对的。
'' 还有做什么测试，道理都是一样，你要去看测试的目的是什么。
'' 
'' 面对水平在你之上的HR 要谦虚 诚恳 但不用心虚 即使你说的不是实话 也要淡定 即使结果不好 也要淡定的走出去   面对在你之下或和你差不多水平的HR 装逼是王道 扯他或她不知道的 多说点专业词汇 时不时问他或她一句 那个什么你知道吗？ 装逼是让他或她感觉到差距 从而有欣赏的感觉
'' 
'' 
'' 你要是很实诚说：我在某某技术上不足，在以前的工作/学习中没弄明白，争取以后工作中弄懂。”
'' 那你大概要fail了，你这可是直接暴露了你不能胜任某项工作啊！
'' 
'' 或者你想我不说技术上的，就说：“我不太擅长人际关系处理，以后努力锻炼这方面的能力。“
'' 这样说也差不多必挂了，你想，这场面试就是考察你的behavior的能力，你再说你不擅长人际交往。而且在团队合作中最注重的就是交流能力，所以这么答八成是废了。
'' 
'' 这个问题还有一个经典的答案：“我的缺点是我太完美主义了，工作的时候因为追求完美要付出很多额外的精力，blabla…”
'' 其实这么答有一点“投机取巧”，而且面试官大概都知道这个梗。有的面试官会说，“这个不算，重新说一个”。
'' 
'' 
'' 可以说... 审美能力有点差...
'' 
'' 高手: 
'' 先回答一个小缺点. 
'' 进一步. 讲故事.让面试官知道 他是如何克服这个缺点 不断进步的.
'' 面试官问你这个问题. 更想听的是 如何克服自身的不足.提升自己.
'' 
'' “我的一个特点是谨慎，做事三思而后行，你要说这是优点，你可以说稳重，办事牢靠，你要说这是缺点，你可以说我比较保守。”
'' 
'' 
'' 
'' 
'' 
'' 但是相对的不考察干货,发挥空间更广
'' 
'' 无论是问你的优点还是缺点。用具体的事例来陈述。
'' 要将面试官对你性格（个性）的研究转移到你做事流程与方法上。
'' 优点：你做成功一件事情的原因是什么。
'' 缺点：你做失败一件事情的原因是什么。
'' 
'' 记住，性格是很难改变的，做事情的方式与流程是随时可变的。与别人谈自己的性格，永远是巨大的坑。
'' 
'' 这样回答的好处是让招聘者知道：
'' 一、你了解这份工作需要什么样的经验和能力。同时你了解你可能面对什么样的竞争对手。
'' 二、你知道如果弥补自己的缺陷。
'' 三、你有自知之明。就算对方不要你，ta也会欣赏你的坦诚，以后会给你机会。

'' 
'' 当被问到这个问题. 说明面试官对你基本素质个专业能力已经认可了.
'' 才会来考你的性格. 这步答的好就直接给你 offer了.
'' 
'' 这时候 其实自己可以强势一点, 可以把自己的缺点说的 理直气壮.
'' 
'' 『我目前没有特别大的缺点，如果有，而且我自己知道的话，我肯定已经改了。我又不傻。』
'' 
'' 
'' 
'' 因为人像硬币一样都有俩个面，这个问题是面试官想了解除了你明亮光鲜的一面，你的背面是怎样的。而如果你在回答上只会一位的投机取巧，那你之前展现的明亮那一面一面是也会显得虚伪。
'' 
'' 很多时候，候选人说出来的问题就是他真实的缺点。
'' 不自信/社交少.
'' 
'' 对缺点的处理方法:
'' 社交少：没法改正，因为我认为交际花和严谨思维是不可兼得的，一方面是时间有限，另一方面是思维习惯不同。
'' 
'' 
'' ❗️切忌把一个优点包装成缺点。❗️
'' 说出缺点后 应该谈谈如何改进这个缺点.
'' 既然能认识到自己的不足.就应该积极的改变它. 
'' 

'' 
'' 所以无论是优点还是缺点，其实都是在展现自己独一无二的人格和能力特征。一个优点必然带来一个缺点，一个缺点也会带来一个优点。
'' 
'' 比如说 领导能力/合作能力
'' A: 我不会领导他人/我不是一个team player
'' B: 我有时候觉得把任务布置给别人，比自己直接做完更花时间精力
'' 显然，比起回答A，回答B听起来既没有那么致命伤又很真诚像是深入思考过问题本质。
'' 
'' 
'' 其实别人并不是想真正知道你的缺点，
'' 别人只是想知道2点：
'' 第一，是不是很坦率，
'' 第二：自己认不认识自己。
'' 
'' 避免避重就轻，不要谈一个算不得缺点的缺点。
'' 
'' 避免谈非职业缺点，比如有感情洁癖，挑食，
'' 
'' 避免谈到无法改善的弱点，比如我算数必须用计算器
'' 
'' 避免谈到致命弱点，比如脾气怪异不喜欢合作迟到早退等。
'' 
'' 同类滥问题包括：你最大的优缺点，你最大的成就，你最后悔的事，举出一个你说服/领导他人的例子），就算你拿到offer也要好好想一想该不该去，因为他们的招聘如此不认真，文化也不会太好。
'' 
'' 
'' 1）谈已经在改正的缺点／有明确计划来改正的缺点。尤其是你能够充分论证在近期就可以解决的缺点。
'' 
'' 
'' 2）谈一个利用你的优点改正的缺点，顺便带出一个优点。
'' 
'' 
'' 3）很关键的是，谈一个真实的缺点。如果你申请的投行资管咨询等工作，要记得你的面试官就是靠跟人打交道为生的。该条适用于所有面试问题，一定不要在简历上作假，你的赢面不大。正确的做法是选择性介绍你的经历，突出学到／用到关联技能，忽略无关部分。
'' 我听到的比较好的几个包括：1）喜欢追求细节导致项目／作业未能按期完成。通过时间管理能力改变工作方式，先完成框架再改善细节得以解决；2）不知如何拒绝，同事要求帮忙一概揽下，影响自身工作进度。通过多任务处理能力设定优先顺序，以该优先顺序表向求助同事展示自己手上工作，并给其一个自己在何时可以给予帮助的时间估计，让求助人自行决定是否求助，问题解决。







🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸


🔸 自己的缺点
  之前都是一个人干活的. 需要稍微适应下.




🔸 人际沟通问题.
  公司会有各种人. 怎么处理.




在此过程中，除了自己想办法不断充电，还要说一下你希望公司可以给你怎样的帮助。
比如能够有岗位轮换的机会；或者能够参与各种项目等。
不要提希望公司会给你培训，送你出国，给你报销学费，要表现得自己希望在实践中成长。 





🔸 你有过和别人合作的经历吗？
  团队内也算合作

现在的绝大部分企业都不欣赏没有原则的老好人。所以，你要把自己包装得强势一些。 

每个人在团队中都应该可以自由坦诚地发表意见，我会非常认真的聆听，分析；
但对于自己的意见我不会没有原则的轻易放弃。民主过后还需要集中。


　　如果你实在没有把握，可以把问题抛还给面试官，试举一例（还是同样的问题）：
  　如果你实在没有把握，可以把问题抛还给面试官，试举一例（还是同样的问题）： 
    也许我可以从您那里得到一些指教，您说我当时这么做有问题吗？ 
  　　如果对方马上对你言传身教，那他铁定是菜鸟，你不用紧张了，
    因为，合理的反应应该是不置可否的说：其实这个问题永远不会有标准答案。 







🔸 为什么选择这个行业.










🔸 你有什么要问我.






🔸 上一家公司的..






🔸 开放性提问

有些问题没有确切的答案. 这就是为了测试技术的广度和深度.和问题分析思维

先看错误提示  
→ 再看 log 日志文件. 
→ 查询谷歌. 

如果出现xxx情况 你会怎么处理.
如果网站无法访问. 哪些方面定位问题源头
如果服务器突然很卡: 怎么定位系统瓶颈.
如果上不去网络 . 怎么定位问题.



🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸










🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸





# DevOps interview




说自己学习能力强. 怎么证明. 在证明中 追问你问题.

对有经验的:
很基础的反而不怎么问了. 
看你做过什么事情. 这些事情的 难点和亮点
会不会总结. 改进提升.

问你没接触过的事情. 看你分析问题的思路和角度.



责任心: 保证服务器安全稳定.
新技术: 节约成本. 增加生产力.

现学现用. 不用会忘记的!! 看学习能力了.








监控平台.  监控架构.

比如每隔两分钟去检查一次所有机器的snmp接口.
把个机器的基本信息抓回来.
然后通过 工具 出图表.方便看..





### restful 标准 ?


例如我订阅了一个人的博客，想要获取他发表的所有文章（这里『他发表的所有文章』就是一个资源Resource）。于是我就向他的服务发出请求，说『我要获取你发表的所有文章，最好是atom格式的』，这时候服务器向你返回了atom格式的文章列表第一页（这里『atom格式的文章列表』就是表征Representation）。

你看到了第一页的页尾，想要看第二页，这时候有趣的事情就来了。
如果服务器记录了应用的状态（stateful），那么你只要向服务询问『我要看下一页』，那么服务器自然就会返回第二页。类似的，如果你当前在第二页，想服务器请求『我要看下一页』，那就会得到第三页。
但是REST的服务器恰恰是无状态的（stateless），服务器并没有保持你当前处于第几页，也就无法响应『下一页』这种具有状态性质的请求。因此客户端需要去维护当前应用的状态（application state），也就是『如何获取下一页资源』。当然，『下一页资源』的业务逻辑必然是由服务端来提供。服务器在文章列表的atom表征中加入一个URI超链接（hyper link），指向下一页文章列表对应的资源。客户端就可以使用统一接口（Uniform Interface）的方式，从这个URI中获取到他想要的下一页文章列表资源。上面的『能够进入下一页』就是应用的状态（State）。服务器把『能够进入下一页』这个状态以atom表征形式传输（Transfer）给客户端就是表征状态传输（REpresentational State Transfer）这个概念







## 负载调度原理:





## RSA 密钥认证原理.不是方法.







## 自动化?
让机器 检测问题 → 发现问题 → 处理问题 → 自我修复 ....














几个员工之间互相合作

一种软件架构风格. 便于在不同的程序中互相传递信息.











抓包. 

网络: 思科华为配置
性能调优: lamp linux
数据库: mysql
编程: shell  awk,sed,grep
背黑锅.... 
公司内部机房 IDC维护. 

linux 运维:  工资涨幅最大.. 
懂的多.换工作很简单...

LDAP
IIS/Apache

shell php 程序.

网络问题分析工具:






防火墙....

服务器上的 tomcat/apache 等常见应用的 基本了解和维护.

服务器cpu/io/memory 监控

数据库: 增删查改...








## 系统监控命令
运行状态. 故障分析. 系统调优. 

## 网络监控命令







高并发网站设计方案.
高可靠,高可伸缩网络结构设计.
网站安全,避免背黑
数据存储架构




### 运维分类.
大型网站 国内前10. 才会有真正的运维.
其他小公司都是 干杂货的..




运维对 网络,系统,存储,安全,DB,等必须非常熟悉...





产品的出生流程:
1. 公司管理层 给出意见. PM定位市场需求 给出详细设计.
2. 架构师根据需求 配置 服务器规模.应用架构.网络规划. 架构设计.
3. 开发人员开发应用. 测试人员测试应用
4.  运维来了.. 
前3步 都需要运维参与的!!!
服务器上架准备. 
服务器系统安装. 
网络 IP 通用工具安装.

 架构是否合理. 是否具有可扩展性,以及安全隐患.

最后负责把.  程序.网络.系统 最优化的组合在一起

应用是经常升级的... 升级一次 就重复一次这个流程..


网站开发 和 软件开发不一样.
网站一天 5/6个版本是很经常的.

应用上线后: 运维:升级版本.  
服务监控. 应用状态统计. 日常服务状态巡检.  突发故障处理.
集群管理. 服务器性能评估优化. 数据库管理优化. 


尽量用工具来 实现各种监控. 提高效率...



大规模集群管理:
1万+ 机器 一分钟内完成密码的修改. 或者运行指定任务.
2000+ 服务器 快速安装系统.....




运维技能: 系统 网络 存储 协议 需求 开发 测试 安全..等都需要了解.
对某些环节要精通.: 系统. 网络 , 安全 , 存储, CDN DB IDC拓补.


### 开发能力
非常重要. 运维工具需要自己开发. 需要有实际的开发经验不然很痛苦..



## 个人素质
沟通能力.... 跨部门工作. 沟通是基本要求.
胆大心细.... 
主动性. 执行力. 时间往往非常紧迫.
脑子灵活. 逻辑思维能力强. 



网络/硬件/软件/ 运行状态. 

运维是经验非常强的岗位. 好的经验/坑都需要积累下来的.



优秀运维极度缺乏. 大公司都自己培养的.
导致 流动性非常差.

运维需求越来越大. 大公司都是毕业生培养. 

运维的工作经验很重要. 也是个人核心竞争力.
具备很好全局思考能力.

容易培养兴趣. 如 内核/网络/开发/数据库等等..





## 集群管理
是为了达到某一目的/功能 的资源的整合. 

目前集群分为两种. 
高可用性集群: HA
负责均衡集群: lvs
分布式存储集群..

小公司四层交换 f5 也可以.




1. 监控
故障监控. 
性能/流量/负责监控.

端口监控 → 看某个服务是不是 奔溃了
icmp 包 探测服务器监控状态.
网站被黑(子区电脑恢复被修改数据...  报警)

异常流量.  攻击等等..




2. 故障管理
几万台的电脑.   死机/硬盘损坏/电源/内存/交换机/防火墙.


3. 被攻击预防


## 自动化
手动操作的命令 进行自动化.  
安装系统. 自动化只要几个简单命令.

自动化是一个运维职业化的追求..
虽然实现自动化很难....这是运维的核心工作.





**没有实际生产环境很难学习**
初级运维需要的是广度.. 


















@: interview

首先是技术面. 最后才是HR面. 就像BTCC.
很多HR对面试者都有一票否决权的.



## HR面
1. 离职原因
2. 当前公司待遇
也不用排斥.适当的夸大一点.(多1K完全可以)
这个和你到新公司的工资完全没有关系.

新公司的工资决定因素: 
整个公司的工资结构 + 你的面试情况来定位的.
都是有工资范围的.
HR问这个主要是心里有个数.并看你是否诚信.(有些公司入职时会要求你提供银行流水号.)


3. 期望到怎样的一家公司
4. 个人未来的发展方向

就四个字: 滴水不漏.
面试过程态度 积极向上.
不要有任何的 悲观消极态度.
尤其对以前的公司 就算有再多不满也不能说.



个人项目:






HR问题汇总
1.  讲一件你印象最深的一件事情

2.  介绍一个你影响最深的项目

3.  介绍你最热爱最擅长的专业领域

4.  公司实习最大的收获是什么

5.  自己的优点和缺点是什么？举例说明

6.  你的学习方法是什么样的？实习过程中如何学习？实习项目中遇到的最大困难是什么以及如何解决的

7.  说一件最能证明你能力的事情

8.  项目中遇到最大的困难是什么？如何解决的

9.  你的职业规划以及个人目标；未来发展路线及求职定位

10. 评价下自己，评价下自己的技术水平，个人代码量如何

11. 通过哪些渠道了解的招聘信息，其他同学都投了哪些公司

12. 业余都有哪些爱好

13. 当前的offer状况；如果BATH都给了offer该如何选

14. 你对一份工作更看重哪些方面？平台，技术，氛围，城市，money

15. 理想薪资范围；杭州岗和北京岗选哪个

16. 理想中的工作环境是什么

17. 实习过程中周围同事/同学有哪些值得学习的地方

18. 家人对你的工作期望及自己的工作期望

19. 若上司在公开会议上误会你了，该如何解决

20. 是否可以实习，可以实习多久

21. 你看中公司的什么？或者公司的那些方面最吸引你？




































## 面试心态
一半以上 都会有声音发抖. 双腿发抖.这是扣分项目.

基本要求:
1. 不紧不慢. 平心静气.
2. 条例清晰


表达能力 绝对是面试重点.
程序员 讲究的是团队协作.表达能力不行的要什么用.






必须要有自信.
不要觉得面试官就比你厉害.
就像  老黄 什么也不懂的啊!!!!!!
他问的问题都是他自己研究的比较多的.
你一样都很多自己的研究.他也不会的.
















## 解决过的 比较复杂的问题.

有一两个就行:









## session cookie的区别 与 联系.







@: job tips
面试分社招 和校招.
毕业只要工作过了  就只能去社招.
各大公司的社招 极其严格.  比如微信 8轮面试.


有些公司 前端又分为: 重构 和 js.






## 一面: 笔试 (微信)
笔试. 四道题目




• JS手写二分搜索算法
• 给你一段代码，让你发现其中的问题(考察闭包)
• 实现一个Lazyman(请自行搜索)
• 用JS代码求出页面上一个元素的最终的background-color，不考虑IE浏览器，不考虑元素float情况。



## 二面: 项目经历
项目经历.
介绍你的项目.
拿出电脑 一起看你的代码.
问是否使用过  react.




## 三面: 前端基础

前端优化手段:
css 上面 js下面
为什么这样:
js下载时会阻塞dom树构建 会造成白屏.
有没有可能然 js下载不阻塞dom构建
用 defer 或者 asyn 字段
defer 和 asyn 区别. defer是ie的.


CSS 下载会不会阻塞dom.

接着优化手段:
css-sprit  小图用base64

css-sprit 原理.
base64 虽然可以减少请求 但是会增大文件. 什么基准去衡量什么时候用base64 什么时候不用.

https 了解多少:
https http区别:
增加了ssl 层面.
画出 ssl 四次握手过程.

ssl 握手有 对称加密 和非对称加密么.


继续优化手段:
CDN
它说cdn现在不稳定. 如何保证能正常显示首页.:
css inline


给你一个柱图.
然你用html css js 绘制出来. 
我用flex 它让手写一个快排算法.

让你用 css 和 js 动画在刚才那个图中 表现出快排过程.



难度很多. 对每个细节都考察非常仔细.










## 百度基础面
html5 新标签. API 等等.
CSS3 新特新. 如 动画
CSS 特性: position用法.  如何实现居中.flex的使用
前端兼容性处理 (css hack技术)

js基础: this 用法. 
new 关键字过程. call apply 区别.
闭包. 原型. js 如何实现继承.

前端基础:
浏览器缓存. 跨域. 
输入url 到渲染整个过程.
tcp 三次握手过程.
如何实现懒加载(和预加载的区别)


## 百度二面: 基础+算法+项目经历
你项目 如何实现的.
然后会问你一些 你提到的区别.

有没有遇到 margin 重叠对象. 如何解决的.

常见的清楚浮动方法.

怎么理解 js 模块化. 有没有用过webpack.







## 百度三面
开放面. 讨论你项目中的某个东西.




## 阿里一面.
对移动端的了解.
前端布局.
js 方面.
性能优化...


2. 如何理解前端工程化


3. 你有什么问题?  会给你详细讲解..



## 阿里二面
后端.  大概问了 前端优化方法.
以及 平常遇到过的最大的困难. 如何解决的.
有什么难忘的事情.
也会问你有什么问题.



## 唯品会
5轮面试.  基础都类似.

web安全的一些知识.
xss 和 csrf .



前端面试  必须好好梳理.
知识点的细节一定要费心清楚.
关于项目经历 .一定要有一条主线.
在这条主线上你做过什么. 遇到过什么坑. 怎么解决的一定要非常清楚.





## 一: 接触真人

海投的话. 3%发 概率把. 不推荐.

无论哪家公司.
都去 linkedin / 或者微博 搜索.

搜索这家公司的hr 或者开发人员. 直接发简历发给那个人.

大部分小公司邮箱格式: 姓名全拼@公司名.com
大部分大公司邮箱格式: 花名.姓名@公司名.com

还用到了  rapportive.com 来保证邮箱的准确性.
150份 能有 30+ 的回信.

有些公司的 ceo cto 会直接回复 甚至面试.




## 二: 由小到大. 先易后难

最简单的: 非技术公司 维护主页. 就问问js基础. 最困难的: BAT. 会问到算法.数据结构..

先面试简单的. 增长小面试经验.难度高的放到后面.
并且 拿到几个 保底offer.



三个月内. 每一段时间就去面试一家.
然后总结经验. 然后我就能回答更难的问题. 拿到更多的钱...



## 三: 学好基础, 工作中会用到.
你要不停的学习 为面试做准备.
如果你不能很好的回答面试官抛出的问题. 他就不会用你..

坚持学习和练习自己的弱项如 数据结构和算法.

花几天时间持续的学习 排序算法. 






## 展现你最好的一面


不管你有没有准备好. 都必须表现的很好.
为了取胜. 你必须展现出你最好的一面.

推销自己.
不要主动书名自己没有经验.
自我介绍的时候 也不要主动提起 在线学习的经历.
为什么!
你说自己没经验 面试官马上会认为你是初级开发者. 给你打上没经验的标签.


有些公司 在面试官知道你是从在线培训出来后 直接走了...
有些还会 因为你的培训经历 给你压价.比普通的初级开发者还低...

记住你要说服面试官 你能做好这份工作.
同时  你要说服你自己.你能做好这份工作.

你可以和面试官谈你对编程的热爱.
谈你用 react 和 node 做过的项目.
谈你对js的 深刻理解.

一旦面试官知道了这些. 你是不是从培训班出来已经不重要了.
只有这样 面试官 才会用你..





## 双向选择

面试 是 互相了解的过程.
你要做的是 说服面试官录用你.
面试官要做的是 争取到靠谱的人.

把面试当成 你评估你的胜算的过程.
把面试官当成垫脚石不可耻..
就算我对一个公司没兴趣 我也会去面试的...










建议问面试官的问题:

你们最佳遇到什么技术挑战
你在这个公司最满意的一点是什么.
你们的团队是怎样的结构. 工作是怎么分配的.


每次面试当成一个学习机会. 
每次面试都能帮我提高 表达能力.面试能力.和技术能力.
每次面试都让我找到我的弱项...




## 五: 这是一场马拉松.不是百米赛跑
三个月 绝对不容易.
每周都要找工作和学习. 还要照顾好自己.

这个过程很容易耗尽热情.很容易孤单.
要有长期作战的心里准备.


大部分公司 还是抵触培训机构出来的.
但是只要你热爱编程.不断提升. 哪里出身不重要.