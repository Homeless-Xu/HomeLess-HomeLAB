🔵 AWS 简介

    AWS Amazon Web Services  最强的云服务提供商.
    
    🔶 为什么不是谷歌呢!!!

        AWS 是云计算的先驱! 最大的优势还是在 先入为主! 这就是创业公司的机遇!
        哪怕是谷歌这样最牛的技术公司, 但是公司大了就不灵活.才给创业公司有了活路!

        谷歌在分布式计算 和 存储方面肯定是世界第一的, 
        因为他们开发和运维着世界上最大的在线服务器!
        但是在云计算市场这方面,在最初没有重视这方面!谷歌是落后的了,
        当然现在谷歌也开始发力了,之后到底怎样 谁也不知道.


🔵 AWS 服务简介

    如果你仅仅把 AWS 和 VPS 划上等号, 那么你就错的离谱了!
    AWS 是一个平台!!! 提供非常多的服务! VPS (EC2) 只是一个经典的服务罢了!!!
    简单说就像造房子!  AWS 给你提供了各种基础材料, 
    普通人用AWS只能造出个土房子, 高手用AWS却能造出 世界第一高楼.

        • EC2 ➜ VPS (虚拟机)
        • S3  ➜ 高级存储! 每个文件都能通过网络访问. 
        • EBS ➜ 普通存储
        • RDS ➜ 关系型数据库
        • CloudFront ➜ CDN (内容交付)
        • VPC ➜ SDN, 用软件而非硬件(路由器/交换机)搭建网络.



🔵 AWS 作用 (个人)

    🔶 EC2 ➜ 免费虚拟机, 

    🔶 RDS ➜ 免费的数据库, 个人足够用了.

    🔶 S3 ➜ 备份大型重要文件!

        非常便宜,可靠性安全性极高!!! 你自己买U盘还怕丢呢! 
        因为免费的是有磁盘读写次数限制的, 也就是 I/O 限制,所以不建议备份小文件!
        如果小文件很多 这个 I/O 值必然会很高. 会超出免费限额! 




🔶🔶🔶🔶🔶🔶🔶🔶🔶🔶🔶🔶🔶🔶🔶🔶  AWS 免费资源  🔶🔶🔶🔶🔶🔶🔶🔶🔶🔶🔶🔶🔶🔶🔶🔶
                          https://aws.amazon.com/cn/free/

🔵 免费资源汇总 

🔶 EC2 ➜ 限总时长 750小时.
    所有实例开机时间总和不能超过750小时每月, 为了安全 建议只开一个最小实例!!!

🔶 存储 EBS ➜ 30GB 限 IO
    免费存储空间只有 30GB  
    所有实例加起来 不能超过30G! 基本别想用 Windows了
    每月 200万的I/O 加上1G的快照存储.
    数据库I/O 是非常高的! 所以不建议把数据库装在EC2 上面啊!  有免费的 RDS 的啊! 
    而且 你还能用 缓存 来降低 I/O. 缓存服务也是免费的!!!



🔶 数据库(SQL) RDS ➜ 20GB 内,  限制IO
    这个时间不算在 EC2 里面的!  也就是你可以整个月开一个 EC2 + 一个 RDS 
🔶 数据库(NoSQL) DynamoDB ➜ 
🔶 数据库 (缓存) ElastiCache ➜ 每月750小时.


🔶 存储 S3 ➜ 5 GB 限 IO
    5GB,限读写次数! 总之放大文件可以, 小文件,照片什么就不要放了.



🔶 Web 服务器负载均衡  ELB ➜ 15GB 限流量
    负载均衡器么 肯定是在所有服务器最前方的. 也就是 所有 EC2 实例的前面.
    ELB 可以给多个 EC2 提供负载均衡.
    这个也能一起开. 只要总的处理流量不超15GB. 学习下是足够了.

🔶 CDN 网络加速 CloudFront ➜ 50GB 流出流量, 限请求数



🔵 免费的坑

🔶 流量:
    所有进入 aws的流量是免费的. 
    但是每月的流出流量只有 15G .
    这个 15G 是对所有 AWS 服务都共享的.

🔶 IP
    固定IP 必须捆绑到 EC2 实例才免费. 开关机无所谓
    你申请了 IP 却不用 是要收费的..






🔵 AWS 免费套餐 (12 个月推广期) ：

🔶 简介
    注册后一年内给你一定限制的免费功能. 不超出不收费.超出部分按标准收费.
    注册后一年后全部安标准收费!

    AWS 免费套餐 详情    https://aws.amazon.com/cn/free/
    注意免费套餐也分两种的.

        AWS 免费套餐 (不过期服务/产品) ：
        AWS 免费套餐 (12 个月推广期) ：

            比如同样是最低配的vps.  推广期服务器地点可以自选.
            不是推广期虽然也提供免费的终身vps,但是地区有限制 就行谷歌一样..




🔶 数据传输

    所有 AWS 服务中共 15GB 的数据传出和 1GB 的地区数据传输*


🔶 计算 (EC2)

    每月 750 小时的 Linux、RHEL 或 SLES t2.micro 实例使用时间
    每月 750 小时的 Windows t2.micro 实例使用时间
    
    ➜  也就是最低配的vps


🔶 存储 (S3)

    5GB 标准存储
    20000 个 Get 请求
    2000 个 Put 请求

    ➜ 也就是 你可以存5G的内容, 上传和下载次数有限制. 个人用足够了.


🔶 RDS (关系型数据库)
    
    AWS 也提供数据库服务.一般来说用不到吧...




⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️------⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️
🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵    EC2   🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵
⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️------⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️
            官方中文介绍 https://aws.amazon.com/cn/ec2/?ft=n

🔶 简介 

    所有迹象都表明 EC2 确实就像一台虚拟服务器. 也就是 VPS.
    可以用SSH登录, 而且也能安装任何程序, 95%+的开发人员都把 EC2 当VPS用.
    但是,这是对 AWS 平台比较浅显的看法!  
    为了了解AWS 我们简单说说AWS的起源, 也就是为什么会有AWS.
    2000 年左右, AWS 公司要求整个公司拥抱 面向服务(SOA)的技术架构.
    SOA 要求每个功能都封装在一个独立的模块中.不同的组件用事先规定的接口相互连接.
    简单说 就像程序的第三方库, 你完全不用知道它是怎么实现的,只要调用就可以了!!!!
    在这种情况下才诞生了 EC2 和 S3 这两个是AWS部门最早的产品!

    AWS 可以说是这个世界上最成功的 SOA 架构案例.

    传统方式,购买一台服务器,然后精心配置,然后确保它在退休前正常工作!
    而EC2 恰恰走向对立面.
    EC2 被设计成一个模块, 这个模块给一个很大的应用程序提供动态计算,
    重点是这个模块是可以随时被抛弃的!!!
    也就是说 你可以有很多 EC2 实例来给 应用程序 提供计算,
    然后那个 EC2有问题了 就直接删除!  而不是选择修复!!!!

    而且,当一个应用程序 需要更多的资源的时候.它应该自己知道如何取创建更多的资源!
    而不是半夜三更 通过邮件电话什么叫一个工程师来处理这种小事情.
    这就是 EC2 的自动弹性伸缩

    其实你应该 按照 SOA 模块的方式来构建系统, 而不是把 EC2 当成单独的服务器.
    就像积木, 一个 EC2 就像一块积木, 你要玩就很多积木一起玩, 而不是只玩一块积木!



🔶 免费 EC2  注意点

    免费是有限制的. 记得别超过限制!  
    而且 AWS 的免费午餐没那么好吃! 不像谷歌 直接给你100刀,用完就收费.
    AWS 和 传统的VPS不太一样! 如果你按照传统的VPS来建站... 很容易被收费...
    具体的 免费信息必须看官网: http://aws.amazon.com/cn/free/

    750 小时 每月 Linux、RHEL 或 SLES t2.micro 实例使用时间
    750 小时 每月 Windows t2.micro 实例使用时间
    ❗️ 例如，运行 1 个实例 1 个月，或运行 2 个实例半个月❗️
    ❗️ 宽带流量: 每月 30GB 15G 流入 + 15G 流出 ❗️

    常规存储: 每月 30GB 
    快照空间: 1GB
    S3 存储:  每月 5G     每月只能存取20000次。



    1、总之要想全年免费使用Amazon EC2 VPS，你最好是创建一个VPS应用，
    使用带星号的操作系统和服务，固定IP也不要使用，只要不重启应用IP还是不变的。

    2、Amazon所有的存储设备都是被挂载上去的，当你重启以后，除了机器上所有的数据都是被清空的，因此你可以把你现在的系统做成一个snapshot，方便你重启的时候恢复。





🔵 EC2 创建实例 

    地区选择 ➜  右上角 选择东京
            AWS在全球有很多数据中心, 你要选择你的服务器要安装在哪个数据中心!!!

    选择 AMI ➜ Ubuntu 系统选择,注意某些系统是收费的!!!

    实例类型 ➜ t2.micro   必须 micro 结尾的,这个配置才是免费的.
                而且为了不超时,强烈建议你只开一个 EC2!!!! 

    配置实例 ➜ 默认 

    添加存储 ➜ 免费总限额30G, 给个10G 差不多了! 留一点.

    添加标签 ➜ xu jian 随便.

    安全配置 ➜ 防火墙配置. 为了安全 还是配置下吧.

    创建密钥 ➜   
            因为aws是通过ssh连接服务器的，所以需要秘钥对! 
            一般是SSH是你客户端自己生成一个密钥对, 自己上传公钥到服务区
            AWS的SSH 是AWS 帮你生成一个密钥对(公钥+私钥), 下载私钥到你电脑.
            AWS 生成的私钥:  .pem 文件!  必须好好保存... 无法再次下载! 

            把 将. pem文件放到你主目录的.ssh文件夹下，并修改其权限。
            默认这个文件是644. 其实这个私钥别人是不能读的!应该是600 
            chmod 600 ~/.ssh/*.pem  然后就可以 ssh 连接服务器了.
            ssh -i ~/.ssh/**.pem ubuntu@13.115.230.116
            因为我的是ubuntu系统，所以主机名是ubuntu。
            你可能需要按照你的系统，到官网看查看。

🔶 设置账单报警 

    账单 ➜ 首选项 ➜ 接收账单警报; 然后在创建个预算
    预算 ➜ 预算金额 0.01 
    当超出预算就会 发邮件! 也可以发短信










⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️------⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️
🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵  S3  🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵
⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️------⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️
                Amazon S3 官方中文介绍 https://aws.amazon.com/cn/s3/

🔶 S3 介绍

    Amazon S3(即Amazon Simple Storage Service)  是一种面向 Internet 的存储服务，
    Amazon还提供了S3 REST API可随时在 Web 上的任何位置存储和检索的任意大小的数据，
    同时提供Java、Python、Golang等各种语言的的SDK。 

    S3 是AWS 知名服务: 可信存储,  任何存在S3的数据基本不可能丢失.
    当然S3 还有很多功能. 如 版本控制、加密...

    Amazon S3是在云上轻松备份和存储文件的好地方。
    有些人使用它来存储他们的个人数据，
    还有其他人用它来存储他们的网站的图像和脚本，甚至使用它作为CDN。
    在桌面上，您可以轻松访问和管理您的Amazon S3帐户如: 
    S3Fox，CloudBerry，DragonDisk等应用程序。，
    
    但是如果你需要从命令行访问它呢？这是S3cmd有用的地方。
    S3cmd是用于在Amazon S3中上传，检索和管理数据的免费命令行工具。
    该工具的最佳用途是在远程服务器上，其中所有操作都在命令行中完成。
    或者，您也可以使用它来创建批处理脚本和自动备份到S3.


🔶 AccessKey 和 SecretKey

    AccessKey: 用于标识客户端身份；
    SecretKey: 私钥保存在客户端服务器，不公开的! 通常用于作为计算请求签名的密钥。
    使用AccessKey进行身份识别，使用SecretKey进行签名，完成客户端的接入、认证和授权。


🔶 AccessKey 和 SecretKey 获取

    1. 注册 AWS 用户....
    https://aws.amazon.com/cn/ ➜ 右上角 我的账户 ➜ 安全证书 ➜ 

    2. 登录 IAM 控制台 
    https://console.aws.amazon.com/iam/home?#/home

    3. 创建 IAM 用户
    http://docs.aws.amazon.com/zh_cn/IAM/latest/UserGuide/id_users_create.html

    IAM 控制台 ➜ 用户 ➜ 添加用户 
    ➜ 用户名随意;  访问类型 (为了 s3cmd 这个命令就选择 编程访问的类型)
    ➜ 设置权限: 勾选 AmazonS3FullAccess 权限
    ➜ 审核 ➜ 创建用户
    ➜ 获得 访问密钥ID +  私有访问密钥.
        ⚡ 这是 仅有的 一次查看或下载私有访问密钥的机会。
           以后您无法恢复它们。不过，您随时可以创建新的访问密钥。


🔶 S3 使用
    
    https://aws.amazon.com/cn/getting-started/tutorials/backup-files-to-amazon-s3/
    
    1. 创建存储桶 ➜ 设置权限 (不公开了, 人家下载的流量也是要计费的...)



🔶 S3 文件同步

    既然可以做备份.那么自然就有文件同步的要求了.
    比如我要备份一个桌面的文件夹, 这个文件夹里的数据会经常更新.
    那么怎么才能让 这个文件夹 同步备份到 AWS 上面呢! 
    有桌面GUI程序: 如 Forklift..就可以连 AWS S3 
    也有命令行工具: 如: s3cmd 


🔵 s3cmd 简介

    s3cmd 命令是操作Amazon S3的利器! 使用简单,功能丰富.
    不仅可以下载和上传文件，还有创建目录等功能. 最重要的是能同步文件夹.

    🔶 s3cmd 使用场景

        - 把本地的日志文件备份到S3时，就可以使用s3cmd和cron的组合，进行定期的备份。 

        - 日志文件的保存期间是365天时，使用s3cmd从S3删除指定的目录等等。


    🔶 S3cmd 安装 

        CentOS  ➜  sudo pip install s3cmd
        MacOS   ➜  brew install s3cmd
        ⚡ 不建议在Mac 上运行 s3cmd 反正自己会遇到些莫名其妙的问题.


    🔶 S3cmd 配置 ✔︎

        安装完s3cmd后，需要对s3cmd进行用户名、密码等信息的配置。
        Access Key ID 和 Secret Access Key 上面我们已经获取到了!
        然后就可以用 🔅s3cmd --configure🔅 命令来配置了. 
        • 首先要你输入 Access Key 
        • 然后要你输入 Secret Key 
        • Encryption password:  自己设置个密码 123456 
        其他都无所谓.直接回车就行!
        Save settings? [y/N] y
        Configuration saved to '/Users/v/.s3cfg'

🔵 s3cmd 常用命令 

    🔶 Bucket ✔︎

        • 查看 Bucket
            ✘✘∙GCE ~ ➜ s3cmd ls
            2017-10-27 08:28  s3://app-conf-rmbp-xujian

        • 创建 Bucket 
            ✘✘∙GCE ~ ➜ s3cmd mb s3://mybucket-0219
            Bucket 's3://mybucket-0219/' created

        • 删除Bucket
            ✘✘∙GCE ~ ➜ s3cmd rb s3://mybucket-0219
            Bucket 's3://mybucket-0219/' removed


    🔶 文件 ✔︎

        ⦿ 上传文件 ✔︎
            ✘✘∙GCE ~ ➜ s3cmd put dead.letter s3://app-conf-rmbp-xujian
            upload: 'dead.letter' -> 's3://app-conf-rmbp-xujian/dead.letter'  [1 of 1]
            146787 of 146787   100% in    0s   333.89 kB/s  done

        ⦿ 查看文件 ✔︎
            ✘✘∙GCE ~ ➜ s3cmd ls s3://app-conf-rmbp-xujian
                                DIR   s3://app-conf-rmbp-xujian/Mac-APP&Conf 备份/
            2017-10-27 10:36    146787   s3://app-conf-rmbp-xujian/dead.letter
            ⚡ 一个是文件夹 一个是文件.  文件夹里面的文件是不会显示的.

        ⦿ 下载文件 ✔︎
            ✘✘∙GCE ~ ➜ cd /tmp
            ✘✘∙GCE /tmp ➜ s3cmd get s3://app-conf-rmbp-xujian/dead.letter
            download: 's3://app-conf-rmbp-xujian/dead.letter' -> './dead.letter'  [1 of 1]
            146787 of 146787   100% in    0s   228.11 kB/s  done

        ⦿ 删除文件 ✔︎
            ✘✘∙GCE /tmp ➜ s3cmd rm s3://app-conf-rmbp-xujian/dead.letter
            delete: 's3://app-conf-rmbp-xujian/dead.letter'



🔵 s3cmd 同步文件夹

    ★★★★★参考: https://www.howtoing.com/s3cmd-file-sync-with-s3bucket

    🔶 本地同步到 S3

    🔶 S3 同步到本地










⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️------⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️
🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵     RDS  🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵
⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️------⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️
                    https://aws.amazon.com/cn/rds/free/

🔵 Amazon RDS 的 AWS 免费套餐

    750 小时的 Amazon RDS 单一可用区 db.t2.micro 实例使用时间，
    20GB 通用型 (SSD) 数据库存储
    20GB 备份存储，用于数据库自动备份和用户发起的数据库快照

🔶 VPC 

    VPC 是一种 SDN,  通过软件来搭建网络!  而不是传统的用路由器交换机来搭建网络!
    VPC 优势非常的明显, 要在云上搭建集群,网络肯定是基础.只能通过VPC了.


🔶 VPC VS 经典网络  VS 物理网络

    物理机房肯定用的是 物理网络. 也就是 交换机 路由器组成的网络.
    普通云服务商用的是 经典网络. 所有云用户共享一个公共网络资源池, 用户间没隔离!
    高级云服务商就会有 VPC 网络. 每个云用户都有一个自己虚拟的网络空间.
                    和物理网络一样, 可以自己划分网段,路由,ACL 安全控制等等.


🔵  连接 RDS 数据库

    这个数据库是建立在 VPC 里面的! 是没有单独的IP的.那么怎么连这个数据库呢!

    你先进 RDS 面板 看数据库实例的详细配置信息.
    里面有个 终端节点: aws-mysql.czpcpi8encs7.ap-northeast-1.rds.amazonaws.com 
    你需要通过这个 来连接数据库! 不是只能通过IP地址来连数据库的! 也可以用域名的!
    
    当然 这是AWS 帮你自动配置好了很多设置, 
    你想自己手动配置 来实现外网访问VPC里面某台服务器的话还是要花费很多心思的!





⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️------⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️
🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵 CloudFront (CDN)         🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵
⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️------⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️
                https://aws.amazon.com/cn/cloudfront/details/
                
🔶 CloudFront 

    加快 静态、动态网络内容分发的服务. 就是 CDN  
    就是把你的文件储存到世界各地的节点,用户访问最近的节点获取数据.
    怎么使用 CloudFront 呢!  每月有 50GB 免费流量呢
    1. 上传文件到 S3. 
    2. 设置文件权限成所有人可读!.默认文件权限是私有的.
    3. 获取文件URL. 格式一般都是下面这样的 
        http://s3.amazonaws.com/mybucket001/filename。
        其中mybucket001是bucket名字，filename是上传的文件名。

    4. 访问下面网址创建一个 Distribution
        https://console.aws.amazon.com/cloudfront/

        首先需要选择一个 CND 类型. Web / RTMP 
        一般都选择 Web,  RTMP 好像是视频用的.不管

        下一步 配置就非常多了...

        Origin Domain Name ➜  app-conf-rmbp-xujian.s3.amazonaws.com
        一般选择 S3 中的桶名. 双击自动弹出, 选择就可以了.
        其他全部默认吧!!  然后下一步. 

5. 安装好后  上传个文件到s3 试试去. 注意权限是公开的
上传文件. 
设置权限: 隔离公共权限: 给予公共读取访问权限


然后呢... s3 里就能看到这个文件了. 点击进去! 有个链接!!!
https://s3-ap-northeast-1.amazonaws.com/app-conf-rmbp-xujian/7c4f157bly1fkqyqcvy9bj20m90xcwjq.jpg

这个链接放到浏览器 任何用户都能访问了.
至于到底是哪里来的 怎么看呢....


🔶 CloudFront 原理 
1. 配置 Origin 服务器, 
   也就是原始服务器,也就是你要进行CDN 分发的文件存在哪里的.一般用 AWS 的s3

2. 上传文件到 Origin 服务器, 也就是上传文件到 s3 服务器.

3. 创建一个 cloud front distribution .
当用户请求数据时, distribution 会通知 cloudfront 去哪个服务器上获取数据并返回给用户.

4. cloudfront 返回一个唯一的域名, 可以用来部署网站! 或者应用程序!

5. cloudfront 把 distrubution 的信息同步到所有的 edge location 里去.

6. 使用第四部返回的 url 部署网站,
还能配置对象缓存在 edge location 中 的缓存时间,  默认 24小时.

7. 一个用户 通过网站 访问 cdn 里的某个图片

8. CloudFront 会决定用那个 edge location 去响应用户的请求.
一般会采用离用户最近的那个!  这样才能提高访问速度.
比如一个新加坡的用户 访问了这个文件

9. 新加坡的 edge location 里. cloudfront 先看有没有缓存! 如果有就直接给客户,
如果没有, cloudfront 会把请求发送到 之前配置的 origin 服务器去亲戚数据.
然后 origin 服务器会把数据 发送给 新加坡的 edge location.
一旦数据从 origin 服务器传过来, cloudfront 就会把数据返回给用户.
同时cloudfront 会把数据缓存到 新加坡的 edge location.

10. edge location 的文件超过缓存期后. 
如果这时候有客人访问这个文件.  cloudfront 会去检查 origin 服务器,这个文件是否更新过, 如果更新过 那么重新从 origin 服务器获取文件.
如果没更新 那么就用之前的老版本缓存! 



⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️------⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️
🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵 DynamoDB 🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵
⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️------⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️
                https://aws.amazon.com/cn/dynamodb/

🔶 DynamoDB 
    
    是一个 NoSQL 数据库服务. 重点是长期免费的, 而不仅仅是一年免费 !!!


🔶 Amazon DynamoDB 免费 

    25GB 存储容量、
    25 个读取容量单位、
    25 个写入容量单位 
    – 借助 Amazon DynamoDB，足以处理每月最多 2 亿次请求。**


🔶  容量单位
    文件分大小. 数据集操作也一样.   
    AWS 根据每秒是数据处理量来 划分规模...

    在 Amazon DynamoDB 中创建表或索引时，必须指定读写活动的容量要求。
    通过提前定义您的吞吐容量，DynamoDB 可以给你预留必要的资源! 
    以满足您的应用程序所需的读写活动，同时确保一致的低延迟性能。

    您可以通过读取容量单位和写入容量单位指定吞吐容量：

    一个读取容量单位 表示对大小最多为 4 KB 的项目每秒执行一次强一致性读取，或每秒执行两次最终一致性读取。
    如果您需要读取大于 4 KB 的项目，DynamoDB 需要消耗额外的读取容量单位。
    所需的读取容量单位的总数取决于项目大小以及您需要最终一致性读取还是强一致性读取。

    一个写入容量单位 表示对大小最多为 1 KB 的项目每秒执行一次写入。
    如果您需要写入大于 1 KB 的项目，DynamoDB 需要消耗额外的写入容量单位。所需的写入容量单位的总数取决于项目大小。

    例如，假设您创建了具有 5 个读取容量单位和 5 个写入容量单位的表。使用这些设置，您的应用程序可以：

    执行高达每秒 20KB 的强一致性读取 (4 KB × 5 个读取容量单位)。
    执行高达每秒 40KB 的最终一致性读取 (读取吞吐量的两倍)。
    每秒写入高达 5KB (1 KB × 5 个写入容量单位)。











🔶 DynamoDB 使用  

    网页点几次就能创建表格!  不能再简单了...
    使用 AWS SDK 来进行 增删查改. 








⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️------⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️
🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵  🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵🔵
⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️------⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️




🔵 CloudWatch 监控 
    https://aws.amazon.com/cn/cloudwatch/
    监控 各种 程序. 如 EC2、RDS....


🔵 Database Migration Service 数据库迁移
    https://aws.amazon.com/cn/dms/
    就是把你的数据 迁移到 AWS...


🔵 Storage Gateway 混合云存储...
    https://aws.amazon.com/cn/storagegateway/
    就是备份  和 ... 存储......




